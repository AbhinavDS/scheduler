(dp1
S'output'
p2
S'<class \'gluon.contrib.pg8000.errors.ProgrammingError\'> (\'ERROR\', \'42804\', \'column "myfield2__tmp" is of type integer but expression is of type character varying\')'
p3
sS'layer'
p4
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/applications/schedule/models/db.py'
p5
sS'code'
p6
S"# -*- coding: utf-8 -*-\n\n#########################################################################\n## This scaffolding model makes your app work on Google App Engine too\n## File is released under public domain and you can use without limitations\n#########################################################################\n\n## if SSL/HTTPS is properly configured and you want all HTTP requests to\n## be redirected to HTTPS, uncomment the line below:\n# request.requires_https()\n\nif not request.env.web2py_runtime_gae:\n    ## if NOT running on Google App Engine use SQLite or other DB\n    db = DAL('postgres://ads:password@localhost/timetable',pool_size=1,check_reserved=['all'])\nelse:\n    ## connect to Google BigTable (optional 'google:datastore://namespace')\n    db = DAL('google:datastore')\n    ## store sessions and tickets there\n    session.connect(request, response, db=db)\n    ## or store session in Memcache, Redis, etc.\n    ## from gluon.contrib.memdb import MEMDB\n    ## from google.appengine.api.memcache import Client\n    ## session.connect(request, response, db = MEMDB(Client()))\n\n## by default give a view/generic.extension to all actions from localhost\n## none otherwise. a pattern can be 'controller/function.extension'\nresponse.generic_patterns = ['*'] if request.is_local else []\n## (optional) optimize handling of static files\n# response.optimize_css = 'concat,minify,inline'\n# response.optimize_js = 'concat,minify,inline'\n## (optional) static assets folder versioning\n# response.static_version = '0.0.0'\n#########################################################################\n## Here is sample code if you need for\n## - email capabilities\n## - authentication (registration, login, logout, ... )\n## - authorization (role based authorization)\n## - services (xml, csv, json, xmlrpc, jsonrpc, amf, rss)\n## - old style crud actions\n## (more options discussed in gluon/tools.py)\n#########################################################################\n\nfrom gluon.tools import Auth, Crud, Service, PluginManager, prettydate\nauth = Auth(db)\ncrud, service, plugins = Crud(db), Service(), PluginManager()\n\n## create all tables needed by auth if not custom tables\nauth.define_tables(username=False, signature=False)\n\n## configure email\nmail = auth.settings.mailer\nmail.settings.server = 'logging' or 'smtp.gmail.com:587'\nmail.settings.sender = 'you@gmail.com'\nmail.settings.login = 'username:password'\n\n## configure auth policy\nauth.settings.registration_requires_verification = False\nauth.settings.registration_requires_approval = False\nauth.settings.reset_password_requires_verification = True\n\n## if you need to use OpenID, Facebook, MySpace, Twitter, Linkedin, etc.\n## register with janrain.com, write your domain:api_key in private/janrain.key\nfrom gluon.contrib.login_methods.rpx_account import use_janrain\nuse_janrain(auth, filename='private/janrain.key')\n\n#########################################################################\n## Define your tables below (or better in another model file) for example\n##\ndb.define_table('mytable',Field('myfield','string'),Field('myfield2','integer'))\n##db.define_table('courses',Field('sNo','int'),Field('slot','string'),Field('courseId','string'),Field('courseName','string'),Field('credits','real'),Field('L','int'),Field('T','int'),Field('P','int'),Field('coordi','string'),Field('regStud','int'),Field('core','bool'))\n                                                                                                                                                                ## Fields can be 'string','text','password','integer','double','boolean'\n##       'date','time','datetime','blob','upload', 'reference TABLENAME'\n## There is an implicit 'id integer autoincrement' field\n## Consult manual for more options, validators, etc.\n##\n## More API examples for controllers:\n##\n## >>> db.mytable.insert(myfield='value')\n## >>> rows=db(db.mytable.myfield=='value').select(db.mytable.ALL)\n## >>> for row in rows: print row.id, row.myfield\n#########################################################################\n\n## after defining tables, uncomment below to enable auditing\n# auth.enable_record_versioning(db)\n"
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'gluon.contrib.pg8000.errors'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of ProgrammingError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of ProgrammingError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of ProgrammingError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of ProgrammingError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of ProgrammingError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of ProgrammingError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of ProgrammingError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'__format__'
p34
S'<built-in method __format__ of ProgrammingError object>'
p35
sS'__class__'
p36
S"<class 'gluon.contrib.pg8000.errors.ProgrammingError'>"
p37
sS'__doc__'
p38
S'None'
p39
sS'__getitem__'
p40
S"<method-wrapper '__getitem__' of ProgrammingError object>"
p41
sS'__setstate__'
p42
S'<built-in method __setstate__ of ProgrammingError object>'
p43
sS'__getattribute__'
p44
S"<method-wrapper '__getattribute__' of ProgrammingError object>"
p45
sS'args'
p46
S'(\'ERROR\', \'42804\', \'column "myfield2__tmp" is of type integer but expression is of type character varying\')'
p47
sS'__subclasshook__'
p48
S'<built-in method __subclasshook__ of type object>'
p49
sS'__unicode__'
p50
S'<built-in method __unicode__ of ProgrammingError object>'
p51
sS'__delattr__'
p52
S"<method-wrapper '__delattr__' of ProgrammingError object>"
p53
sS'__repr__'
p54
S"<method-wrapper '__repr__' of ProgrammingError object>"
p55
sS'__hash__'
p56
S"<method-wrapper '__hash__' of ProgrammingError object>"
p57
ssS'evalue'
p58
S'(\'ERROR\', \'42804\', \'column "myfield2__tmp" is of type integer but expression is of type character varying\')'
p59
sS'request'
p60
cgluon.html
XML_unpickle
p61
(S's\\e\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>schedule</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>hello</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-089096eb-a471-4c4f-af84-b6965d8ea887<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_first</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-ece2eb96-783d-4d6d-8938-b562aee682f4<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_schedule</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-e017c707-74ae-4a95-a767-20ba875d3d1a<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-db9b8289-9e2f-461d-a35d-e1bbf380c107<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-us</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CACHE_CONTROL</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_admin=127.0.0.1-089096eb-a471-4c4f-af84-b6965d8ea887; session_id_first=127.0.0.1-ece2eb96-783d-4d6d-8938-b562aee682f4; session_id_schedule=127.0.0.1-e017c707-74ae-4a95-a767-20ba875d3d1a; session_id_welcome=127.0.0.1-db9b8289-9e2f-461d-a35d-e1bbf380c107</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9) AppleWebKit/537.71 (KHTML, like Gecko) Version/7.0 Safari/537.71</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/schedule/hello</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>58117</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>Abhinavs-MacBook-Pro.local</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/First/&#x27;, &#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/schedule/&#x27;, &#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/admin/&#x27;, &#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/welcome/&#x27;, &#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/Schedule/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x10bad4dd0: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;192.168.2.1&#x27;, &#x27;10.204.152.83&#x27;, &#x27;192.168.3.1&#x27;, &#x27;fe80::426c:8fff:fe1e:76e%en0&#x27;, &#x27;192.168.4.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Abhinavs-MacBook-Pro.local&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-us</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cache_control</td><td style="vertical-align:top;">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_admin=127.0.0.1-089096eb-a471-4c4f-af84-b6965d8ea887; session_id_first=127.0.0.1-ece2eb96-783d-4d6d-8938-b562aee682f4; session_id_schedule=127.0.0.1-e017c707-74ae-4a95-a767-20ba875d3d1a; session_id_welcome=127.0.0.1-db9b8289-9e2f-461d-a35d-e1bbf380c107</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9) AppleWebKit/537.71 (KHTML, like Gecko) Version/7.0 Safari/537.71</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>Abhinavs-MacBook-Pro.local</div></td></tr><tr><td><div>192.168.2.1</div></td></tr><tr><td><div>10.204.152.83</div></td></tr><tr><td><div>192.168.3.1</div></td></tr><tr><td><div>fe80::426c:8fff:fe1e:76e%en0</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>192.168.4.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/schedule/hello</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>58117</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/schedule/hello</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>Abhinavs-MacBook-Pro.local</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.5-stable+timestamp.2014.03.16.02.35.39</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x10ac5e1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x10ba7b328&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x10bb1b7d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x10ac5e1e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x10ba7b328&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x10bb1b7d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/schedule/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>index</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/First/&#x27;, &#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/schedule/&#x27;, &#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/admin/&#x27;, &#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/welcome/&#x27;, &#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/Schedule/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x10bad4dd0: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [&#x27;192.168.2.1&#x27;, &#x27;10.204.152.83&#x27;, &#x27;192.168.3.1&#x27;, &#x27;fe80::426c:8fff:fe1e:76e%en0&#x27;, &#x27;192.168.4.1&#x27;], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;Abhinavs-MacBook-Pro.local&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>Abhinavs-MacBook-Pro.local</div></td></tr><tr><td><div>192.168.2.1</div></td></tr><tr><td><div>10.204.152.83</div></td></tr><tr><td><div>192.168.3.1</div></td></tr><tr><td><div>fe80::426c:8fff:fe1e:76e%en0</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>192.168.4.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.9.5-stable+timestamp.2014.03.16.02.35.39</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 5, 18, 13, 41, 6, 68403)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/schedule/hello</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2014, 5, 18, 8, 11, 6, 68412)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">uuid</td><td style="vertical-align:top;">:</td><td><div>schedule/127.0.0.1.2014-05-18.13-41-06.20c44ca2-81b4-4946-b0ca-95434364ccbd</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x11868b650&gt;</div></td></tr></table></div>'
tRp62
sS'frames'
p63
(lp64
(dp65
S'file'
p66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/restricted.py'
p67
sS'dump'
p68
(dp69
S'environment'
p70
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}"
p71
sS'ccode'
p72
S'<code object <module> at 0x1186b54b0, file "/Use...2py/applications/schedule/models/db.py", line 12>'
p73
ssS'lnum'
p74
I220
sS'lines'
p75
(dp76
I224
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p77
sI215
S'    try:'
p78
sI216
S'        if isinstance(code, types.CodeType):'
p79
sI217
S'            ccode = code'
p80
sI218
S'        else:'
p81
sI219
S'            ccode = compile2(code, layer)'
p82
sI220
S'        exec ccode in environment'
p83
sI221
S'    except HTTP:'
p84
sI222
S'        raise'
p85
sI223
S'    except RestrictedError:'
p86
ssS'call'
p87
S"(code='# -*- coding: utf-8 -*-\\n\\n#######################...ble auditing\\n# auth.enable_record_versioning(db)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, ...}, layer='/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/applications/schedule/models/db.py')"
p88
sS'func'
p89
S'restricted'
p90
sa(dp91
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/applications/schedule/models/db.py'
p92
sg68
(dp93
S'Field'
p94
S"<class 'gluon.dal.Field'>"
p95
sS'db.define_table'
p96
S'<bound method DAL.define_table of <DAL uri="postgres:******@localhost/timetable">>'
p97
sS'db'
p98
S'<DAL uri="postgres:******@localhost/timetable">'
p99
ssg74
I69
sg75
(dp100
I64
S"use_janrain(auth, filename='private/janrain.key')"
p101
sI65
S''
sI66
S'#########################################################################'
p102
sI67
S'## Define your tables below (or better in another model file) for example'
p103
sI68
S'##'
p104
sI69
S"db.define_table('mytable',Field('myfield','string'),Field('myfield2','integer'))"
p105
sI70
S"##db.define_table('courses',Field('sNo','int'),Field('slot','string'),Field('courseId','string'),Field('courseName','string'),Field('credits','real'),Field('L','int'),Field('T','int'),Field('P','int'),Field('coordi','string'),Field('regStud','int'),Field('core','bool'))"
p106
sI71
S"                                                                                                                                                                ## Fields can be 'string','text','password','integer','double','boolean'"
p107
sI72
S"##       'date','time','datetime','blob','upload', 'reference TABLENAME'"
p108
sI73
S"## There is an implicit 'id integer autoincrement' field"
p109
ssg87
S'()'
p110
sg89
S'<module>'
p111
sa(dp112
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/dal.py'
p113
sg68
(dp114
S'fields'
p115
S'(<gluon.dal.Field object>, <gluon.dal.Field object>)'
p116
sS'self'
p117
S'<DAL uri="postgres:******@localhost/timetable">'
p118
sS'args'
p119
g21
sS'tablename'
p120
S"'mytable'"
p121
sS'table'
p122
S'undefined'
p123
sS'self.lazy_define_table'
p124
S'<bound method DAL.lazy_define_table of <DAL uri="postgres:******@localhost/timetable">>'
p125
ssg74
I8223
sg75
(dp126
I8224
S'        if not tablename in self.tables:'
p127
sI8225
S'            self.tables.append(tablename)'
p128
sI8226
S'        return table'
p129
sI8227
S''
sI8218
S'                    % (tablename,invalid_args))'
p130
sI8219
S'        if self._lazy_tables and not tablename in self._LAZY_TABLES:'
p131
sI8220
S'            self._LAZY_TABLES[tablename] = (tablename,fields,args)'
p132
sI8221
S'            table = None'
p133
sI8222
S'        else:'
p134
sI8223
S'            table = self.lazy_define_table(tablename,*fields,**args)'
p135
ssg87
S'(self=<DAL uri="postgres:******@localhost/timetable">, tablename=\'mytable\', *fields=(<gluon.dal.Field object>, <gluon.dal.Field object>), **args={})'
p136
sg89
S'define_table'
p137
sa(dp138
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/dal.py'
p139
sg68
(dp140
S'polymodel'
p141
S'None'
p142
ssg74
I8260
sg75
(dp143
I8256
S'                GLOBAL_LOCKER.acquire()'
p144
sI8257
S'                self._lastsql = self._adapter.create_table('
p145
sI8258
S'                    table,migrate=migrate,'
p146
sI8259
S'                    fake_migrate=fake_migrate,'
p147
sI8260
S'                    polymodel=polymodel)'
p148
sI8261
S'            finally:'
p149
sI8262
S'                GLOBAL_LOCKER.release()'
p150
sI8263
S'        else:'
p151
sI8264
S'            table._dbt = None'
p152
sI8255
S'            try:'
p153
ssg87
S'(self=<DAL uri="postgres:******@localhost/timetable">, tablename=\'mytable\', *fields=(<gluon.dal.Field object>, <gluon.dal.Field object>), **args={})'
p154
sg89
S'lazy_define_table'
p155
sa(dp156
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/dal.py'
p157
sg68
(dp158
S'fake_migrate'
p159
S'False'
p160
ssg74
I1132
sg75
(dp161
I1127
S'            if sql_fields != sql_fields_old:'
p162
sI1128
S'                self.migrate_table('
p163
sI1129
S'                    table,'
p164
sI1130
S'                    sql_fields, sql_fields_old,'
p165
sI1131
S'                    sql_fields_aux, None,'
p166
sI1132
S'                    fake_migrate=fake_migrate'
p167
sI1133
S'                    )'
p168
sI1134
S'        return query'
p169
sI1135
S''
sI1136
S'    def migrate_table('
p170
ssg87
S'(self=<gluon.dal.PostgreSQLAdapter object>, table=<Table mytable (id,myfield,myfield2)>, migrate=True, fake_migrate=False, polymodel=None)'
p171
sg89
S'create_table'
p172
sa(dp173
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/dal.py'
p174
sg68
(dp175
S'self'
p176
S'<gluon.dal.PostgreSQLAdapter object>'
p177
sS'self.execute'
p178
S'<bound method PostgreSQLAdapter.execute of <gluon.dal.PostgreSQLAdapter object>>'
p179
sS'sub_query'
p180
S"'UPDATE mytable SET myfield2__tmp=myfield2;'"
p181
ssg74
I1245
sg75
(dp182
I1248
S'                        # in one transaction so we must commit'
p183
sI1249
S'                        # partial transactions and'
p184
sI1240
S'                    if fake_migrate:'
p185
sI1241
S'                        if db._adapter.commit_on_alter_table:'
p186
sI1242
S'                            self.save_dbt(table,sql_fields_current)'
p187
sI1243
S"                        self.log('faked!\\n', table)"
p188
sI1244
S'                    else:'
p189
sI1245
S'                        self.execute(sub_query)'
p190
sI1246
S'                        # Caveat: mysql, oracle and firebird'
p191
sI1247
S'                        # do not allow multiple alter table'
p192
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, table=<Table mytable (id,myfield,myfield2)>, sql_fields={'id': {'length': 512, 'notnull': False, 'sortable': 1, 'sql': 'SERIAL PRIMARY KEY', 'type': 'id', 'unique': False}, 'myfield': {'length': 512, 'notnull': False, 'sortable': 2, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': False}, 'myfield2': {'length': 512, 'notnull': False, 'sortable': 3, 'sql': 'INTEGER', 'type': 'integer', 'unique': False}}, sql_fields_old={'id': {'length': 512, 'notnull': False, 'sortable': 1, 'sql': 'SERIAL PRIMARY KEY', 'type': 'id', 'unique': False}, 'myfield': {'length': 512, 'notnull': False, 'sortable': 2, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': False}, 'myfield2': {'length': 512, 'notnull': False, 'sortable': 3, 'sql': 'VARCHAR(512)', 'type': 'string', 'unique': False}}, sql_fields_aux={'id': {'sql': 'SERIAL PRIMARY KEY'}, 'myfield': {'sql': 'VARCHAR(512)'}, 'myfield2': {'sql': 'INTEGER'}}, logfile=None, fake_migrate=False)"
p193
sg89
S'migrate_table'
p194
sa(dp195
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/dal.py'
p196
sg68
(dp197
S'a'
S"('UPDATE mytable SET myfield2__tmp=myfield2;',)"
p198
sS'self'
p199
S'<gluon.dal.PostgreSQLAdapter object>'
p200
sS'b'
g21
sS'self.log_execute'
p201
S'<bound method PostgreSQLAdapter.log_execute of <gluon.dal.PostgreSQLAdapter object>>'
p202
ssg74
I1969
sg75
(dp203
I1964
S'        self.db._timings.append((command,time.time()-t0))'
p204
sI1965
S'        del self.db._timings[:-TIMINGSSIZE]'
p205
sI1966
S'        return ret'
p206
sI1967
S''
sI1968
S'    def execute(self, *a, **b):'
p207
sI1969
S'        return self.log_execute(*a, **b)'
p208
sI1970
S''
sI1971
S'    def represent(self, obj, fieldtype):'
p209
sI1972
S'        field_is_type = fieldtype.startswith'
p210
sI1973
S'        if isinstance(obj, CALLABLETYPES):'
p211
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, *a=('UPDATE mytable SET myfield2__tmp=myfield2;',), **b={})"
p212
sg89
S'execute'
p213
sa(dp214
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/dal.py'
p215
sg68
(dp216
S'a'
S"('UPDATE mytable SET myfield2__tmp=myfield2;',)"
p217
sS'b'
g21
sS'self'
p218
S'<gluon.dal.PostgreSQLAdapter object>'
p219
sS'ret'
p220
g123
sS'self.cursor'
p221
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p222
sS'command'
p223
S"'UPDATE mytable SET myfield2__tmp=myfield2;'"
p224
sS'self.cursor.execute'
p225
S'<bound method CursorWrapper._fn of <gluon.contrib.pg8000.dbapi.CursorWrapper object>>'
p226
ssg74
I1963
sg75
(dp227
I1958
S'            command = self.filter_sql_command(command)'
p228
sI1959
S'        if self.db._debug:'
p229
sI1960
S"            LOGGER.debug('SQL: %s' % command)"
p230
sI1961
S'        self.db._lastsql = command'
p231
sI1962
S'        t0 = time.time()'
p232
sI1963
S'        ret = self.cursor.execute(command, *a[1:], **b)'
p233
sI1964
S'        self.db._timings.append((command,time.time()-t0))'
p234
sI1965
S'        del self.db._timings[:-TIMINGSSIZE]'
p235
sI1966
S'        return ret'
p236
sI1967
S''
ssg87
S"(self=<gluon.dal.PostgreSQLAdapter object>, *a=('UPDATE mytable SET myfield2__tmp=myfield2;',), **b={})"
p237
sg89
S'log_execute'
p238
sa(dp239
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/dbapi.py'
p240
sg68
(dp241
S'self'
p242
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p243
sS'args'
p244
S"('UPDATE mytable SET myfield2__tmp=myfield2;',)"
p245
sS'fn'
p246
S'<function execute>'
p247
sS'kwargs'
p248
g21
ssg74
I246
sg75
(dp249
I241
S''
sI242
S'def require_open_cursor(fn):'
p250
sI243
S'    def _fn(self, *args, **kwargs):'
p251
sI244
S'        if self.cursor == None:'
p252
sI245
S'            raise CursorClosedError()'
p253
sI246
S'        return fn(self, *args, **kwargs)'
p254
sI247
S'    return _fn'
p255
sI248
S''
sI249
S'##'
p256
sI250
S'# The class of object returned by the {@link #ConnectionWrapper.cursor cursor method}.'
p257
ssg87
S"(self=<gluon.contrib.pg8000.dbapi.CursorWrapper object>, *args=('UPDATE mytable SET myfield2__tmp=myfield2;',), **kwargs={})"
p258
sg89
S'_fn'
p259
sa(dp260
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/dbapi.py'
p261
sg68
(dp262
S'self._execute'
p263
S'<bound method CursorWrapper._execute of <gluon.contrib.pg8000.dbapi.CursorWrapper object>>'
p264
sS'self'
p265
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p266
sS'args'
p267
S'()'
p268
sS'operation'
p269
S"'UPDATE mytable SET myfield2__tmp=myfield2;'"
p270
ssg74
I317
sg75
(dp271
I320
S'        new_query, new_args = convert_paramstyle(paramstyle, operation, args)'
p272
sI321
S'        try:'
p273
sI312
S'    @require_open_cursor'
p274
sI313
S'    def execute(self, operation, args=()):'
p275
sI314
S'        if not self._connection.in_transaction:'
p276
sI315
S'            self._connection.begin()'
p277
sI316
S'        self._override_rowcount = None'
p278
sI317
S'        self._execute(operation, args)'
p279
sI318
S''
sI319
S'    def _execute(self, operation, args=()):'
p280
ssg87
S"(self=<gluon.contrib.pg8000.dbapi.CursorWrapper object>, operation='UPDATE mytable SET myfield2__tmp=myfield2;', args=())"
p281
sg89
g213
sa(dp282
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/dbapi.py'
p283
sg68
(dp284
S'new_args'
p285
S'()'
p286
sS'self.cursor'
p287
S'<gluon.contrib.pg8000.interface.Cursor object>'
p288
sS'self'
p289
S'<gluon.contrib.pg8000.dbapi.CursorWrapper object>'
p290
sS'new_query'
p291
S"'UPDATE mytable SET myfield2__tmp=myfield2;'"
p292
sS'self.cursor.execute'
p293
S'<bound method Cursor.execute of <gluon.contrib.pg8000.interface.Cursor object>>'
p294
ssg74
I322
sg75
(dp295
I320
S'        new_query, new_args = convert_paramstyle(paramstyle, operation, args)'
p296
sI321
S'        try:'
p297
sI322
S'            self.cursor.execute(new_query, *new_args)'
p298
sI323
S'        except ConnectionClosedError:'
p299
sI324
S"            # can't rollback in this case"
p300
sI325
S'            raise'
p301
sI326
S'        except:'
p302
sI317
S'        self._execute(operation, args)'
p303
sI318
S''
sI319
S'    def _execute(self, operation, args=()):'
p304
ssg87
S"(self=<gluon.contrib.pg8000.dbapi.CursorWrapper object>, operation='UPDATE mytable SET myfield2__tmp=myfield2;', args=())"
p305
sg89
S'_execute'
p306
sa(dp307
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/interface.py'
p308
sg68
(dp309
S'x'
g123
sS'args'
p310
S'()'
p311
sS'builtintype'
p312
S"<type 'type'>"
p313
sS'self._stmt'
p314
S'<gluon.contrib.pg8000.interface.PreparedStatement object>'
p315
sS'self'
p316
S'<gluon.contrib.pg8000.interface.Cursor object>'
p317
sS'self.connection'
p318
S'<gluon.contrib.pg8000.interface.Connection object>'
p319
sS'global PreparedStatement'
p320
S"<class 'gluon.contrib.pg8000.interface.PreparedStatement'>"
p321
sS'statement_name'
p322
g123
sS'query'
p323
S"'UPDATE mytable SET myfield2__tmp=myfield2;'"
p324
ssg74
I398
sg75
(dp325
I393
S'                # use PostgreSQL Simple Query Protocol'
p326
sI394
S'                ## print "SimpleQuery:", query'
p327
sI395
S'                self._stmt = SimpleStatement(self.connection, query)'
p328
sI396
S'            else:'
p329
sI397
S'                # use PostgreSQL Extended Query Protocol'
p330
sI398
S'                self._stmt = PreparedStatement(self.connection, query, statement_name="", *[{"type": type(x), "value": x} for x in args])'
p331
sI399
S'            self._stmt.execute(*args, **kwargs)'
p332
sI400
S'        finally:'
p333
sI401
S'            self.connection._unnamed_prepared_statement_lock.release()'
p334
sI402
S''
ssg87
S"(self=<gluon.contrib.pg8000.interface.Cursor object>, query='UPDATE mytable SET myfield2__tmp=myfield2;', *args=(), **kwargs={})"
p335
sg89
g213
sa(dp336
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/interface.py'
p337
sg68
(dp338
S'self.c'
p339
S'<gluon.contrib.pg8000.protocol.Connection object>'
p340
sS'self'
p341
S'<gluon.contrib.pg8000.interface.PreparedStatement object>'
p342
sS'self.c.parse'
p343
S'<bound method Connection._fn of <gluon.contrib.pg8000.protocol.Connection object>>'
p344
sS'self._statement_name'
p345
S"''"
p346
sS'self._parse_row_desc'
p347
g123
sS'statement'
p348
S"'UPDATE mytable SET myfield2__tmp=myfield2;'"
p349
sS'types'
p350
S'()'
p351
ssg74
I138
sg75
(dp352
I133
S'        self._statement_name = kwargs.get("statement_name", "pg8000_statement_%s" % self._statement_number)'
p353
sI134
S'        self._row_desc = None'
p354
sI135
S'        self._cached_rows = []'
p355
sI136
S'        self._ongoing_row_count = 0'
p356
sI137
S'        self._command_complete = True'
p357
sI138
S'        self._parse_row_desc = self.c.parse(self._statement_name, statement, types)'
p358
sI139
S'        self._lock = threading.RLock()'
p359
sI140
S''
sI141
S'    def close(self):'
p360
sI142
S'        if self._statement_name != "": # don\'t close unnamed statement'
p361
ssg87
S"(self=<gluon.contrib.pg8000.interface.PreparedStatement object>, connection=<gluon.contrib.pg8000.interface.Connection object>, statement='UPDATE mytable SET myfield2__tmp=myfield2;', *types=(), **kwargs={'statement_name': ''})"
p362
sg89
g26
sa(dp363
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/protocol.py'
p364
sg68
(dp365
S'self'
p366
S'<gluon.contrib.pg8000.protocol.Connection object>'
p367
sS'args'
p368
S"('', 'UPDATE mytable SET myfield2__tmp=myfield2;', ())"
p369
sS'fn'
p370
S'<function parse>'
p371
sS'kwargs'
p372
g21
ssg74
I943
sg75
(dp373
I938
S''
sI939
S'def sync_on_error(fn):'
p374
sI940
S'    def _fn(self, *args, **kwargs):'
p375
sI941
S'        try:'
p376
sI942
S'            self._sock_lock.acquire()'
p377
sI943
S'            return fn(self, *args, **kwargs)'
p378
sI944
S'        except:'
p379
sI945
S'            self._sync()'
p380
sI946
S'            raise'
p381
sI947
S'        finally:'
p382
ssg87
S"(self=<gluon.contrib.pg8000.protocol.Connection object>, *args=('', 'UPDATE mytable SET myfield2__tmp=myfield2;', ()), **kwargs={})"
p383
sg89
g259
sa(dp384
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/protocol.py'
p385
sg68
(dp386
S'reader.handle_messages'
p387
S'<bound method MessageReader.handle_messages of <gluon.contrib.pg8000.protocol.MessageReader object>>'
p388
sS'reader'
p389
S'<gluon.contrib.pg8000.protocol.MessageReader object>'
p390
ssg74
I1104
sg75
(dp391
I1099
S'        reader.add_message(NoData, lambda msg: (None, param_fc))'
p392
sI1100
S''
sI1101
S'        # Common row description response'
p393
sI1102
S'        reader.add_message(RowDescription, lambda msg: (msg, param_fc))'
p394
sI1103
S''
sI1104
S'        return reader.handle_messages()'
p395
sI1105
S''
sI1106
S'    @sync_on_error'
p396
sI1107
S'    def bind(self, portal, statement, params, parse_data, copy_stream):'
p397
sI1108
S'        self.verifyState("ready")'
p398
ssg87
S"(self=<gluon.contrib.pg8000.protocol.Connection object>, statement='', qs='UPDATE mytable SET myfield2__tmp=myfield2;', param_types=[])"
p399
sg89
S'parse'
p400
sa(dp401
g66
S'/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/protocol.py'
p402
sg68
(dp403
S'exc'
p404
S'ProgrammingError(\'ERROR\', \'42804\', \'column "myfi...ger but expression is of type character varying\')'
p405
ssg74
I929
sg75
(dp406
I928
S'                if not self.delay_raising_exception:'
p407
sI929
S'                    raise exc'
p408
sI930
S'            elif isinstance(msg, NoticeResponse):'
p409
sI931
S'                self._conn.handleNoticeResponse(msg)'
p410
sI932
S'            elif isinstance(msg, ParameterStatus):'
p411
sI933
S'                self._conn.handleParameterStatus(msg)'
p412
sI924
S'            if msg_handled:'
p413
sI925
S'                continue'
p414
sI926
S'            elif isinstance(msg, ErrorResponse):'
p415
sI927
S'                exc = msg.createException()'
p416
ssg87
S'(self=<gluon.contrib.pg8000.protocol.MessageReader object>)'
p417
sg89
S'handle_messages'
p418
sasS'pyver'
p419
S'Python 2.7.5: /usr/bin/python (prefix: /System/Library/Frameworks/Python.framework/Versions/2.7)'
p420
sS'session'
p421
g61
(S's\x1a\x00\x00\x00<div><table></table></div>'
tRp422
sS'etype'
p423
S"<class 'gluon.contrib.pg8000.errors.ProgrammingError'>"
p424
sS'date'
p425
S'Sun May 18 13:41:06 2014'
p426
sS'response'
p427
g61
(S's%\x17\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x118794618&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_schedule</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-e017c707-74ae-4a95-a767-20ba875d3d1a<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^hello/\\w+\\.py$</div></td></tr><tr><td><div>^hello/index/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_key</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_schedule</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/schedule/sessions/127.0.0.1-e017c707-74ae-4a95-a767-20ba875d3d1a&#x27;, mode &#x27;rb+&#x27; at 0x1186a0930&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/Users/Abhinav/Documents/Hobbies &amp; Stuff/Computer/Shivam/web2py/applications/schedule/sessions/127.0.0.1-e017c707-74ae-4a95-a767-20ba875d3d1a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>72d417a7f41c0ee1c230e34d0e7234c6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-e017c707-74ae-4a95-a767-20ba875d3d1a</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_schedule</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_locked</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>schedule</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>hello/index.html</div></td></tr></table></div>'
tRp428
sS'locals'
p429
(dp430
S'exc'
p431
S'ProgrammingError(\'ERROR\', \'42804\', \'column "myfi...ger but expression is of type character varying\')'
p432
sS'msg_class'
p433
S"<class 'gluon.contrib.pg8000.protocol.RowDescription'>"
p434
sS'self'
p435
S'<gluon.contrib.pg8000.protocol.MessageReader object>'
p436
sg46
S'()'
p437
sS'handler'
p438
S'<function <lambda>>'
p439
sS'kwargs'
p440
g21
sS'msg'
p441
S'<ErrorResponse ERROR 42804 \'column "myfield2__tm...ger but expression is of type character varying\'>'
p442
sS'msg_handled'
p443
g160
sssS'traceback'
p444
S'Traceback (most recent call last):\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/restricted.py", line 220, in restricted\n    exec ccode in environment\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/applications/schedule/models/db.py", line 69, in <module>\n    db.define_table(\'mytable\',Field(\'myfield\',\'string\'),Field(\'myfield2\',\'integer\'))\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/dal.py", line 8223, in define_table\n    table = self.lazy_define_table(tablename,*fields,**args)\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/dal.py", line 8260, in lazy_define_table\n    polymodel=polymodel)\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/dal.py", line 1132, in create_table\n    fake_migrate=fake_migrate\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/dal.py", line 1245, in migrate_table\n    self.execute(sub_query)\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/dal.py", line 1969, in execute\n    return self.log_execute(*a, **b)\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/dal.py", line 1963, in log_execute\n    ret = self.cursor.execute(command, *a[1:], **b)\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/dbapi.py", line 246, in _fn\n    return fn(self, *args, **kwargs)\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/dbapi.py", line 317, in execute\n    self._execute(operation, args)\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/dbapi.py", line 322, in _execute\n    self.cursor.execute(new_query, *new_args)\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/interface.py", line 398, in execute\n    self._stmt = PreparedStatement(self.connection, query, statement_name="", *[{"type": type(x), "value": x} for x in args])\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/interface.py", line 138, in __init__\n    self._parse_row_desc = self.c.parse(self._statement_name, statement, types)\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/protocol.py", line 943, in _fn\n    return fn(self, *args, **kwargs)\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/protocol.py", line 1104, in parse\n    return reader.handle_messages()\n  File "/Users/Abhinav/Documents/Hobbies & Stuff/Computer/Shivam/web2py/gluon/contrib/pg8000/protocol.py", line 929, in handle_messages\n    raise exc\nProgrammingError: (\'ERROR\', \'42804\', \'column "myfield2__tmp" is of type integer but expression is of type character varying\')\n'
p445
s.